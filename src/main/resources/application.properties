spring.application.name=book-server
# MySQL DataSource Configuration
spring.datasource.url=jdbc:mysql://database-1.c0joqskg44s3.us-east-1.rds.amazonaws.com:3306/book_app_db
spring.datasource.username=admin
spring.datasource.password=Lancer*1332
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA/Hibernate Properties
# Tells Hibernate (the default JPA provider) how to interact with MySQL
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# DDL (Data Definition Language) auto-creation strategy by Hibernate
# 'update': Hibernate updates the schema if necessary (adds tables/columns). Good for development.
# 'validate': Hibernate validates the schema, doesn't make changes. Safer for production.
# 'create': Drops and recreates the schema on startup. Data will be lost.
# 'create-drop': Drops the schema when the application context closes. Data will be lost.
# 'none': No DDL operations.
# For now, 'update' is convenient.
spring.jpa.hibernate.ddl-auto=update

# Show SQL statements in the console (useful for debugging)
spring.jpa.show-sql=true

# Format SQL statements in the console (optional, makes them more readable)
spring.jpa.properties.hibernate.format_sql=true